name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install FFmpeg
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint || echo "Linting not configured yet"

    - name: Run tests
      run: npm test || echo "Tests not configured yet"

    - name: Test application startup
      run: |
        timeout 30s npm start &
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        pkill -f "node src/server.js"

  docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: obs-multistream:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 3000:3000 -p 1935:1935 obs-multistream:latest
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container
        docker rm test-container

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

    - name: Check for vulnerabilities
      run: npm audit --audit-level=moderate --json > audit-results.json || true

    - name: Upload audit results
      uses: actions/upload-artifact@v4
      with:
        name: security-audit
        path: audit-results.json